📌 Reflections on LLM Querying and Data Structure
The current task focuses on structured data (hospital pricing from CSV) and aims to enable natural language (NL) to SQL translation using LLMs. This is well-suited for:

✅ Tabular data

✅ Clear schema (e.g., DRG codes, ZIP codes, ratings)

✅ Reliable results via SQL-based grounding

LLMs like GPT-4o are effective in this setting, especially with clearly defined schema and system prompts that constrain output format and logic.

However, in real-world healthcare scenarios, unstructured data is far more prevalent — such as PDFs, medical guidelines, discharge notes, or EHR free-text. These cases require:

🔎 RAG (Retrieval-Augmented Generation) pipelines for context grounding

🧠 Vector databases (e.g. FAISS, Chroma, or Weaviate) for semantic matching

🧾 Advanced NLP techniques to parse and normalize complex inputs

This exercise intentionally avoids RAG, as it evaluates LLM-driven SQL generation over a well-scoped, structured dataset.

✅ Conclusion
For structured data, SQL + OpenAI is sufficient, fast, and reliable.

For unstructured data, vector search + RAG are essential for robust performance.



🚀 Future Improvement Ideas (might be overkill on the MVP)
Direction	Description
🔍 Fuzzy DRG Search	Allow users to search by misspelled or vague terms (e.g., "knee replace" → DRG 470), via keyword-to-code mapping or fuzzy search
📍 Natural Language Location	Understand queries like "within 20 km of 10001" or "near Los Angeles" and convert them into ZIP + radius filters
📊 Chart/Structured Output	Return JSON in a chart-friendly structure (e.g. for bar or line graphs), enabling frontends to easily visualize cost or rating comparisons
